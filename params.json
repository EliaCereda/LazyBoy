{"body":"LazyBoy Object Modeller\r\n=======================\r\n\r\n# Oh my word... What have you done?\r\nLazyBoy makes it easier to build applications with Couchdb. It removes the repeatable cruft and makes working with Couchdb as fun as it should be.\r\n\r\n# 4 easy steps to installation\r\n\r\n1) Download\r\n\r\n    npm install lazyboy\r\n\r\n2) Connect to database\r\n\r\n    var Model = require('lazyboy')\r\n    Model.create_connection(\"my_database\");\r\n\r\n3) Define a model\r\n\r\n    Model.define('User', {\r\n      name: String\r\n      surname: {type: String, default: \"Rambo\"}\r\n    })\r\n\r\n4) Read the docs: [http://garrensmith.com/LazyBoy](http://garrensmith.com/LazyBoy)\r\n\r\n# How do I use this it?\r\n\r\nBelow is a quick cheatsheet but the docs can be found at [http://garrensmith.com/LazyBoy](http://garrensmith.com/LazyBoy)\r\n\r\n## Defining a model\r\n    var Model = require('LazyBoy');\r\n\r\n    Model.define('User', {\r\n      name: String\r\n      surname: {type: String, default: \"Rambo\"}\r\n    })\r\n\r\n## Creating and saving a model\r\n    \r\n    var user = Model.create('User', {name: \"John\", surname: \"Rambo\"});\r\n\r\n    user.save(function (err, saved_user) {\r\n        // .. do some other stuff here\r\n    })\r\n\r\n## Finding a model\r\n### Finding by Id\r\n    var user_id = \"123456\";\r\n\r\n    var User = Model('User');\r\n    User.find(user_id, function (err, user) {\r\n        // .. do something with the user\r\n    })\r\n\r\n### Find all or by criteria \r\n\r\n    var User = Model('User');\r\n    User.all(function (err, users) {\r\n        // .. do something with the user\r\n    })\r\n\r\n    var User = Model('User');\r\n    User.where(\"name\",\"Ben\", function (err, users) {\r\n        // .. do something with the user\r\n    })\r\n\r\n## Custom Views\r\n\r\n    var Band = Model.define(\"Band\",{rank: Number, name: String});\r\n\r\n    Band.addView('ByRankAndName',{ \r\n      map: function (doc) {\r\n        if (doc.model_type === 'Band') {\r\n          emit([doc.rank, doc.name],1);\r\n        }\r\n      }\r\n    });\r\n\r\n    Band.view('ByRankAndName')\r\n      .startkey([2, \"Incubus\"])\r\n      .endkey([3, {}])\r\n      .limit(10)\r\n      .skip(3, function (err, bands) {\r\n       // will only execute the chain when a function has a callback passed to it\r\n    });\r\n\r\n## Logging\r\nLogging has been disabled for now.\r\n\r\n#What needs doing?\r\n\r\n* Define model_type field stored in db\r\n* Multiple db support\r\n* Improved logging\r\n\r\n#Changelog\r\n* 24 October 2012 - Add Chainable Api\r\n* 25 July 2012 - Bug fixes, change tests to mocha\r\n* 20 July 2012 - Added toJSON function on Document\r\n* 11 Nov 2011 - Added Validations using node-validator\r\n* 13 Sep 2011 - Add Id to serialised model\r\n* 11 Sep 2011 - Add Before And After Remove Callbacks (Donnie Hedin)\r\n* 17 Aug 2011 - Add support for custom methods \r\n\r\n#Contributors\r\n* Donnie Hedin (sofa420)\r\n* 8bitDesigner\r\n","name":"Lazyboy","tagline":"A object mapper for couchdb for node.js","google":"UA-3810980-9","note":"Don't delete this file! It's used internally to help with page regeneration."}